problem : https://leetcode.com/problems/largest-rectangle-in-histogram

Naive approtch

 public int largestRectangleArea(int[] arr) {
       
       int res = 0;
       int n = arr.length;
       for( int i = 0; i < n; i++){
           
           int curr = arr[i];
           
           for(int j = i-1; j >= 0; j--){
               if(arr[j] >= arr[i]) curr += arr[i];
               else break;
           }
           
           for(int j = i+1; j < n; j++){
               if(arr[j] >= arr[i]) curr += arr[i];
               else break;
           }
           res = Math.max(res, curr);
       }
        
        return res;
    }

Better approtch

 public int largestRectangleArea(int[] arr) {
    
        Stack<Integer> s = new Stack();
        int res = 0;
        int n = arr.length;
        
        //edge case
        if(n ==1) return arr[0];
        
        for(int i = 0 ; i < n; i++){
            
            while(s.size() > 0 && arr[s.peek()] >= arr[i]) {
               
               int curr = s.pop();
               int ans;
               
                if(s.size() > 0) 
                    ans = arr[curr]*(i-s.peek()-1);
                else 
                    ans = arr[curr] * i;
            
                res = Math.max(res, ans);
            }
            s.push(i);
        }
        
        while(s.size()>0){
            int curr = s.pop();
            int ans;
            if(s.size() > 0)
                ans = arr[curr]*(n-s.peek()-1);
            else
                ans = arr[curr] * n;
            
            res = Math.max(res, ans);
        }
        
        return res;
    }    
