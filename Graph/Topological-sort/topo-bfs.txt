problem link : https://practice.geeksforgeeks.org/problems/topological-sort/1


Note : here we are using the inDegree array to keep the track of indegree
code :

 static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        int ans[] = new int[V];
        Queue<Integer> qu = new LinkedList<>();
        int inDegree[] = new int[V] ;
       
        for(int i = 0; i< V; i++){
           ArrayList<Integer> nbrs = adj.get(i);
           for(int nbr : nbrs){
               inDegree[nbr]++;
           }
        }
        
        for(int i = 0; i < V ; i++){
            if(inDegree[i] == 0){
                qu.add(i);
            }
        }
        
        int ind = 0;
        while(qu.size() > 0 ){
            
            int node = qu.remove();
            ans[ind++] = node;
            
            ArrayList<Integer> nbrs = adj.get(node);
            
            for(int nbr : nbrs){
                if(--inDegree[nbr] == 0){
                    qu.offer(nbr);
                }
            }
            
        }
        
        return ans;
    }
    