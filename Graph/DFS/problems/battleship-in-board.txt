problem link : https://leetcode.com/problems/battleships-in-a-board/
code : 
class Solution {
    
    public static int dir[][] = {{0, 1}, {0, -1}, {-1, 0}, {1, 0}};
    
    public boolean check(int row, int col, char grid[][]){
        
        if(row < grid.length && row >= 0 && col >= 0 && col < grid[0].length && grid[row][col] == 'X')
            return true;
        
        return false;
        
    }
    
    public void dfs(int row, int col, char grid[][]){
        
        grid[row][col] = '.';
        
        for(int side[] : dir){
            int newRow = row + side[0];
            int newCol = col + side[1];
            
            if(check(newRow, newCol ,grid)){
                dfs(newRow, newCol, grid);
            }
            
        }
        
    }
    
    
    public int countBattleships(char[][] board) {
        
        int count = 0;
        int rowLength = board.length;
        if(rowLength == 0) return count;
        int colLength = board[0].length;
        
        for(int row = 0 ; row < rowLength; row++){
            for(int col = 0 ; col < colLength; col++){
                
                if(board[row][col] == 'X'){
                    count++;
                    dfs(row, col, board);
                }                    
                
            }
        }
        
        return count;
    }
}