Link : https://leetcode.com/problems/stone-game-ii/description/

Code :

class Solution {
    public int stoneGameII(int[] piles) {
    int[] preSum = new int[piles.length + 1];
    for (int i = 0; i < piles.length; i++) {
        preSum[i + 1] = preSum[i] + piles[i];
    }
    return stoneGameIIHelper(piles, preSum, 0, 1, new int[piles.length][piles.length + 1]);
}

private int stoneGameIIHelper(int[] piles, int[] preSum, int start, int M, int[][] memo) {
    if (start == piles.length) {
        return 0;
    }
    if (memo[start][M] > 0) {
        return memo[start][M];
    }
    int max = 0;
    for (int i = 1; i <= 2 * M && start + i <= piles.length; i++) {
        int nextMax = preSum[piles.length] - preSum[start] - stoneGameIIHelper(piles, preSum, start + i, Math.max(M, i), memo);
        max = Math.max(max, nextMax);
    }
    memo[start][M] = max;
    return max;
}

}