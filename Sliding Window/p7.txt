problem 4 : 

Note : 

- this is basic patter keep adding from right if condition overflow then reduce from the left side

https://www.geeksforgeeks.org/problems/longest-k-unique-characters-substring0853/1

public int longestkSubstr(String s, int k) {
        
        int left = 0;
        int maxLen = -1, size = s.length();
        Map<Character, Integer> map = new HashMap<>();
        for(int right = 0; right < size; right++){
            char ch = s.charAt(right);
            map.put(ch, map.getOrDefault(ch, 0)+1);
            if(map.size() == k){
                int len = right-left+1;
                maxLen = Math.max(maxLen, len);
            }else if(map.size() > k){
                while(left < size && map.size() > k){
                    char leftChar = s.charAt(left);
                   // System.out.println(leftChar+"---");
                    if(map.containsKey(leftChar)){
                        if(map.get(leftChar) == 1){
                            map.remove(leftChar);
                        }else{
                            map.put(leftChar, map.get(leftChar)-1);
                        }
                    }
                    left++;
                }
            }
        }
        return maxLen;   
        
    }