problem link:https://practice.geeksforgeeks.org/problems/longest-k-unique-characters-substring0853/1

Pattern : variable window size
Window difference = j - i + 1;

code:

class Solution {
    public int longestkSubstr(String s, int k) {
       
       HashMap<Character, Integer> map = new HashMap<>();
       int size = s.length();
       if(size == 0 || k == 0 ) return 0;
       int i = 0;
       int j = 0;
       int max = -1;
       
       while(j < size){
       
            char ch = s.charAt(j);
            map.put(ch, map.getOrDefault(ch, 0)+1);
        
            if(map.size() == k){
                int ans = j - i + 1;
                max = Math.max(max, ans);
            }else if(map.size() > k){
                
                while(map.size() > k && i < size){
                    char ptr = s.charAt(i);
                    
                    if(map.get(ptr) == 1){
                        map.remove(ptr);
                    }else if(map.get(ptr) > 1){
                        map.put(ptr, map.get(ptr)-1);
                    }
                    i++;    
                }
            }
            j++;      
        }
        return max;     
    }
      
}