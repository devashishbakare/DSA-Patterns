link : https://leetcode.com/problems/minimize-the-maximum-difference-of-pairs/description/

editorial : https://www.youtube.com/watch?v=UVV9EzsXGwo

code :

class Solution {
    public int minimizeMax(int[] nums, int p) {
        Arrays.sort(nums);
        int low = 0;
        int high = nums[nums.length-1] - nums[0];
        int ans = high;

        while(low <= high){
            int mid = low + (high-low)/2;
            if(isPossible(p, mid, nums)){
                ans = mid;
                high = mid-1;
            }else{
                low = mid+1;
            }
        }
        return ans;
    }

    public boolean isPossible(int p, int target, int nums[]){
        
        for(int i = 1; i < nums.length; i++){
            if(nums[i]-nums[i-1] <= target){
                p--;
                i++;
            }
        }
        return p<=0;
    }
}